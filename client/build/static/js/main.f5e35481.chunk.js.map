{"version":3,"sources":["redux/user/user.action.types.js","redux/user/user-reducer.js","redux/cart/cart.action.types.js","redux/cart/cart.utilities.js","redux/cart/cart.reducer.js","redux/directory/directory.reducer.js","redux/shop/shop.action.types.js","redux/shop/shop.reducer.js","redux/root-reducer.js","firebase/firebase.utilities.js","redux/shop/shop.actions.js","redux/shop/shop.sagas.js","redux/user/user.actions.js","redux/user/user-sagas.js","redux/cart/cart.actions.js","redux/cart/cart.sagas.js","redux/root-saga.js","redux/store.js","global.styles.js","redux/directory/directory.selectors.js","components/menu-item/menu-item.component.jsx","components/directory/directory.component.jsx","pages/homepage/homepage.styles.jsx","pages/homepage/homepage.component.jsx","redux/shop/shop.selectors.js","components/custom-button/custom-button.component.jsx","components/collection-item/collection-item.component.jsx","components/collection-preview/collection-preview.component.jsx","components/collections-overview/collections-overview.component.jsx","pages/collection-page/collection-page.component.jsx","components/with-spinner/with-spinner.styles.jsx","components/with-spinner/with-spinner.component.jsx","pages/shop-page/shop-page.component.jsx","assets/crown.svg","assets/shopping-bag.svg","redux/cart/cart.selectors.js","components/cart-icon/cart-icon.component.jsx","components/cart-item/cart-item.component.jsx","components/cart-dropdown/cart-dropdown.component.jsx","redux/user/user.selectors.js","components/header/header.styles.jsx","components/header/header.component.jsx","components/checkout-item/checkout-item.jsx","components/stripe-button/stripe-button.component.jsx","pages/checkout-page/checkout-page.component.jsx","App.js","index.js"],"names":["userActionTypes","SIGN_UP_START","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","GOOGLE_SIGN_IN_START","EMAIL_SIGN_IN_START","SIGN_IN_SUCCESS","SIGN_IN_FAILURE","CHECK_USER_SESSION","SIGN_OUT_START","SIGN_OUT_SUCCESS","SIGN_OUT_FAILURE","INITIAL_STATE","currentUser","error","userReducer","currentState","action","type","payload","cartActionTypes","addItemToCart","cartItems","itemToAdd","find","cartItem","id","map","quantity","removeItemFromCart","itemToRemove","filter","removeQuantityFromCart","itemToReduce","hiddenDropdown","cartReducer","sections","title","imageUrl","linkUrl","size","directoryReducer","shopActionTypes","FETCH_COLLECTIONS_START","FETCH_COLLECTIONS_SUCCESS","FETCH_COLLECTIONS_FAILURE","collections","isFetching","errorMessage","shopReducer","persistConfig","key","storage","whitelist","rootReducer","combineReducers","user","cart","directory","shop","persistReducer","createUserProfileDocument","userAuth","additionalData","a","async","userRef","firestore","doc","uid","get","snapshot","collectionRef","collection","collectionSnapshot","console","log","docs","data","exists","displayName","email","createdAt","Date","set","message","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","convertCollectionsFromSnapshotToMap","transformCollections","items","routeName","encodeURI","toLowerCase","reduce","accumulator","getCurrentUser","Promise","resolve","reject","unsubscribe","onAuthStateChanged","fetchCollectionsStart","fetchCollectionsSuccess","collectionsMap","fetchCollectionsFailure","fetchCollectionsAsync","shopSagas","call","put","takeLatest","all","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","getSnapshotFromUserAuth","signUpStart","signUpWithEmail","signUpWithSuccess","signInAfterSignUp","googleSignInStart","signInWithGoogle","emailSignInStart","signInWithEmail","checkUserSession","isUserAuthenticated","onSignOutStart","signOutFromApp","userSagas","userSnapshot","password","createUserWithEmailAndPassword","signInWithPopup","signInWithEmailAndPassword","signOut","setCartDropdownDisplay","addItem","item","clearCart","clearCartAfterSignOut","clearCartStart","cartSagas","rootSaga","sagaMiddleware","createSagaMiddleware","middlewares","store","createStore","applyMiddleware","run","persistor","persistStore","GlobalStyle","createGlobalStyle","selectDirectorySections","createSelector","state","withRouter","history","match","className","onClick","push","url","style","backgroundImage","toUpperCase","mapStateToProps","createStructuredSelector","connect","otherSectionProps","HomePageContainer","styled","section","HomePage","selectShop","selectShopCollections","selectOneCollectionToDisplay","Object","keys","selectIsCollectionLoaded","CustomButton","children","isGoogleSignIn","hoverAddToCart","otherProps","dispatch","name","price","CollectionPreview","index","props","collectionParam","params","collectionId","SpinnerOverlay","div","SpinnerContainer","WithSpinner","WrappedComponent","isLoading","CollectionsOverviewWithSpinner","CollectionsOverview","CollectionPageWithSpinner","CollectionPage","isCollectionLoaded","useEffect","exact","path","render","_extends","assign","target","i","arguments","length","source","prototype","hasOwnProperty","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","stroke","strokeWidth","fill","fillRule","transform","points","fillOpacity","cx","cy","r","_ref","svgRef","width","height","viewBox","ref","undefined","ForwardRef","forwardRef","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","x","y","enableBackground","xmlSpace","d","selectCart","selectCartItems","selectCartItemsCount","quantitySum","selectCartHiddenDropdown","selectCartItemsTotalValue","iconCount","CartItem","src","alt","selectCurrentUser","HeaderCommonStyles","css","HeaderContainer","header","LogoContainer","Link","OptionsContainer","nav","LinkOptionContainer","signOutStart","to","href","removeItem","removeQuantityFromItem","StripeCheckoutButton","priceInCentsForStripe","label","billingAddress","shippingAddress","image","description","amount","panelLabel","token","axios","method","then","response","alert","catch","stripeKey","cartTotalValue","component","ShopPage","CheckOutPage","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f5e35481.chunk.js","sourcesContent":["// This will be an object to avoid mistakes when referencing the name of the property, which now is a string value. \n\nconst userActionTypes = {\n  SIGN_UP_START: 'SIGN_UP_START',\n  SIGN_UP_SUCCESS: 'SIGN_UP_SUCCESS',\n  SIGN_UP_FAILURE: 'SIGN_UP_FAILURE',\n  GOOGLE_SIGN_IN_START: 'GOOGLE_SIGN_IN_START',\n  EMAIL_SIGN_IN_START: 'EMAIL_SIGN_IN_START',\n  SIGN_IN_SUCCESS: 'SIGN_IN_SUCCESS',\n  SIGN_IN_FAILURE: 'SIGN_IN_FAILURE',\n  CHECK_USER_SESSION: 'CHECK_USER_SESSION',\n  SIGN_OUT_START: 'SIGN_OUT_START',\n  SIGN_OUT_SUCCESS: 'SIGN_OUT_SUCCESS',\n  SIGN_OUT_FAILURE: 'SIGN_OUT_FAILURE',\n  // SET_CURRENT_USER: 'SET_CURRENT_USER', =>  replaced by redux-saga!\n  // The lines below were eliminated, due to a refactoring to reduce the number of actions for success and failure:\n  // GOOGLE_SIGN_IN_SUCCESS: 'GOOGLE_SIGN_IN_SUCCESS',\n  // GOOGLE_SIGN_IN_FAILURE: 'GOOGLE_SIGN_IN_FAILURE',\n  // EMAIL_SIGN_IN_SUCCESS: 'EMAIL_SIGN_IN_SUCCESS',\n  // EMAIL_SIGN_IN_FAILURE: 'EMAIL_SIGN_IN_FAILURE',\n}\n\nexport default userActionTypes;","import userActionTypes from './user.action.types';\n\n// We need to set the initial state to Redux:\n\nconst INITIAL_STATE = {\n  currentUser: null,\n  error: null\n}\n\n// We need to set a function to change the state. It is necessary to have a default (or else) statement, because the reducer will receive many actions at first, no matter the type of action. That reducer will only generate a new object, in case the action.type is the one that this reducer has the control.\n\nconst userReducer = (currentState = INITIAL_STATE, action) => {\n  switch(action.type) {\n    case userActionTypes.SIGN_UP_SUCCESS:\n    case userActionTypes.SIGN_IN_SUCCESS:\n      return {\n        ...currentState,\n        currentUser: action.payload,\n        error: null,\n      }\n    case userActionTypes.SIGN_UP_FAILURE:\n    case userActionTypes.SIGN_IN_FAILURE:\n    case userActionTypes.SIGN_OUT_FAILURE:\n      return {\n        ...currentState,\n        error: action.payload,\n      }\n    case userActionTypes.SIGN_OUT_SUCCESS:\n      return {\n        ...currentState,\n        currentUser: null,\n        error: null,\n      }\n    default:\n      return currentState;\n  }\n}\n\nexport default userReducer;","// This will be an object to avoid mistakes when referencing the name of the property, which now is a string value. \n\nexport const cartActionTypes = {\n  TOOGLE_CART_DISPLAY: 'TOOGLE_CART_DISPLAY',\n  ADD_ITEM_TO_CART: 'ADD_ITEM_TO_CART',\n  REMOVE_ITEM_FROM_CART: 'REMOVE_ITEM_FROM_CART',\n  REMOVE_QUANTITY_FROM_ITEM: 'REMOVE_QUANTITY_FROM_ITEM',\n  CLEAR_CART: 'CLEAR_CART'\n}\n","\n// This type of file is useful to maintain clean codes, by separating the function from the code in which we actually want to call that function.\n\nexport const addItemToCart = (cartItems, itemToAdd) => {\n  const checkExistingCartItem = cartItems.find(cartItem => cartItem.id === itemToAdd.id);\n  if (checkExistingCartItem) {\n    return (\n      cartItems.map(cartItem => {\n        return (\n          cartItem.id === itemToAdd.id ?\n          // Translating the next line of code: do not add the cartItem again, instead just add 1 to its quantity property, because the item already exists in the array.\n          {\n            ...cartItem,\n            quantity: cartItem.quantity + 1\n          } :\n          {...cartItem}\n        )\n      })\n    );\n  } else {\n    return (\n      // Translating the next line of code: keep the cartItems array as it is, added with the new itemToAdd, because this item did not exist in the original array. Also, create a 'quantity' property, so we can add it by 1 whenever the user add the item again to its shop cart.\n      cartItems = [...cartItems, {\n        ...itemToAdd,\n        quantity: 1\n      }]\n    )\n  }\n};\n\nexport const removeItemFromCart = (cartItems, itemToRemove) => {\n  return (\n    cartItems.filter(cartItem => cartItem.id !== itemToRemove.id)\n  )\n}\n\nexport const removeQuantityFromCart = (cartItems, itemToReduce) => {\n  const checkExistingCartItem = cartItems.find(cartItem => cartItem.id === itemToReduce.id)\n  if (checkExistingCartItem.quantity === 1) {\n    return (\n      removeItemFromCart(cartItems, itemToReduce)\n    )\n  } else {\n    return (\n      cartItems.map((cartItem) => {\n        return (\n          cartItem.id === itemToReduce.id ?\n          // Translating the next line of code: remove 1 from the item's quantity property.\n          {\n            ...cartItem,\n            quantity: cartItem.quantity - 1\n          } :\n          {...cartItem}\n        )\n      })\n    )\n  }\n}","import { cartActionTypes } from './cart.action.types';\nimport { addItemToCart } from './cart.utilities';\nimport { removeItemFromCart } from './cart.utilities';\nimport { removeQuantityFromCart } from './cart.utilities';\n\n// We need to set the initial state to Redux:\n\nconst INITIAL_STATE = {\n  hiddenDropdown: true,\n  cartItems: [],\n}\n\n// We need to set a function to change the state. It is necessary to have a default (or else) statement, because the reducer will receive many actions at first, no matter the type of action. That reducer will only generate a new object, in case the action.type is the one that this reducer has the control.\n\nconst cartReducer = (currentState = INITIAL_STATE, action) => {\n  switch(action.type) {\n    case cartActionTypes.TOOGLE_CART_DISPLAY:\n      return {\n        ...currentState,\n        hiddenDropdown: !currentState.hiddenDropdown\n      }\n    case cartActionTypes.ADD_ITEM_TO_CART:\n      return {\n        ...currentState,\n        // In the code below, we are simply defining that the cartItems array will remain with its elements, plus the action.payload, as a new item to the end of the array.\n        cartItems: addItemToCart(currentState.cartItems, action.payload)\n      }\n    case cartActionTypes.REMOVE_ITEM_FROM_CART:\n      return {\n        ...currentState,\n        cartItems: removeItemFromCart(currentState.cartItems, action.payload)\n      }\n    case cartActionTypes.REMOVE_QUANTITY_FROM_ITEM:\n      return {\n        ...currentState,\n        cartItems: removeQuantityFromCart(currentState.cartItems, action.payload)\n      }\n    case cartActionTypes.CLEAR_CART:\n      return {\n        ...currentState,\n        cartItems: []\n      }\n    default:\n      return currentState;\n  }\n}\n\nexport default cartReducer;","// We need to set the initial state to Redux:\n\nconst INITIAL_STATE = {\n  sections: [\n    {\n      title: \"hats\",\n      imageUrl: \"https://i.ibb.co/cvpntL1/hats.png\",\n      id: 1,\n      linkUrl: 'shop/hats'\n    },\n    {\n      title: \"jackets\",\n      imageUrl: \"https://i.ibb.co/px2tCc3/jackets.png\",\n      id: 2,\n      linkUrl: 'shop/jackets'\n    },\n    {\n      title: \"sneakers\",\n      imageUrl: \"https://i.ibb.co/0jqHpnp/sneakers.png\",\n      id: 3,\n      linkUrl: 'shop/sneakers'\n    },\n    {\n      title: \"women\",\n      imageUrl: \"https://i.ibb.co/GCCdy8t/womens.png\",\n      size: \"large\",\n      id: 4,\n      linkUrl: 'shop/women'\n    },\n    {\n      title: \"men\",\n      imageUrl: \"https://i.ibb.co/R70vBrQ/men.png\",\n      size: \"large\",\n      id: 5,\n      linkUrl: 'shop/men'\n    }\n  ]\n};\n\nconst directoryReducer = (currentState = INITIAL_STATE, action) => {\n  switch (action.type) {\n    default:\n      return currentState;\n  }\n};\n\nexport default directoryReducer;","// This will be an object to avoid mistakes when referencing the name of the property, which now is a string value. \n\nexport const shopActionTypes = {\n  // UPDATE_COLLECTIONS: 'UPDATE_COLLECTIONS' => it is no longer necessary with redux-thunk !\n  FETCH_COLLECTIONS_START: 'FETCH_COLLECTIONS_START',\n  FETCH_COLLECTIONS_SUCCESS: 'FETCH_COLLECTIONS_SUCCESS',\n  FETCH_COLLECTIONS_FAILURE: 'FETCH_COLLECTIONS_FAILURE',\n}\n","// We need to set the initial state to Redux:\n\n// import SHOP_DATA from './shop.data';\nimport { shopActionTypes } from './shop.action.types';\n\n// This initial state will no longer be needed, because we configured an action to upload the shop reducer with the back-end data from firebase:\n// const INITIAL_STATE = {\n//   collections: SHOP_DATA\n// };\n\nconst INITIAL_STATE = {\n  collections: null,\n  isFetching: false,\n  errorMessage: '',\n};\n\n\nconst shopReducer = (currentState = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case shopActionTypes.FETCH_COLLECTIONS_START:\n      return {\n        ...currentState,\n        isFetching: true\n      }\n    case shopActionTypes.FETCH_COLLECTIONS_SUCCESS:\n      return {\n        ...currentState,\n        isFetching: false,\n        collections: action.payload\n      }\n    case shopActionTypes.FETCH_COLLECTIONS_FAILURE:\n      return {\n        ...currentState,\n        isFetching: false,\n        errorMessage: action.payload\n      }\n    default:\n      return currentState;\n  }\n};\n\nexport default shopReducer;","import { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist';\n// Storage is the actual Local Storage:\nimport storage from 'redux-persist/lib/storage';\nimport userReducer from './user/user-reducer';\nimport cartReducer from './cart/cart.reducer';\nimport directoryReducer from './directory/directory.reducer';\nimport shopReducer from './shop/shop.reducer';\n\n// We need to config what we want to cache as local storage, and from which reducer to begin this cache. In our case, we want to begin from the root reducer, so the 'key' property has to be equal to 'root'.\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['cart']\n}\n\n// We need to import all the Reducers to the Root Reducer:\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer,\n  directory: directoryReducer,\n  shop: shopReducer\n});\n\n// Translating the code: we are creating a new rootReducer, with the configurations we want to make the reducers to persist their states. The reducers that must persist are the ones listed inside the 'whitelist' property.\n\nexport default persistReducer(persistConfig, rootReducer);\n\n","// Main Configurations => we need to import only the auth and the firestore libraries, and thatś why we define firebase/app and then the following two lines of codes.\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// ****** FIREBASE CONFIGURATIONS ****** //\n\n// This variable contains the exclusive object generated by Firebase for our project. We have to copy the object and paste here. There is an API Key inside this object.\n\nconst config = {\n  apiKey: \"AIzaSyCoNjZVMVAPZeHpirLllqd6K-L7PsShr4c\",\n  authDomain: \"virtual-store-app-project.firebaseapp.com\",\n  databaseURL: \"https://virtual-store-app-project.firebaseio.com\",\n  projectId: \"virtual-store-app-project\",\n  storageBucket: \"virtual-store-app-project.appspot.com\",\n  messagingSenderId: \"200336094879\",\n  appId: \"1:200336094879:web:4daaccdfc466236ee0d4aa\",\n  measurementId: \"G-8B3MXMQG3X\"\n}\n\n// Configure the database to storage our users in the application => it is importante to know that we can have a document reference object or a snapshot object from a collection of users, for example. The first is always generated, no matter if the user exists or not in our database. With that document in hands, we can access the CRUD methods, including the .get(), to retrieve data, which will return us a snapshot of the user inside the database. \n\n// At this moment, we will finally have access to the user data, whether they exist or not in the database. If the user does not exists, the document snapshot \"exists\" property will return \"false\". \n\n// This will be a function to get the user Auth Object and then storage it in our firestore database. Ps: the \"uid\" is a string dynamically generated by firebase at each user's creation.\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if(!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapshot = await userRef.get();\n\n  // The following 4 lines of code were created just to display what we can see inside a collection snapshot object, as well as the .JSON object returned from the .data() method => with these commands, we can access the entire docs from a collection:\n  const collectionRef = firestore.collection('users');\n  const collectionSnapshot = await collectionRef.get();\n  console.log({ collectionSnapshot });\n  console.log({collection: collectionSnapshot.docs.map(doc => doc.data())});\n\n  // if the 'exists' property is false, then we will create a new user object into our database, using the documentReference Object. To create this new user, we need to choose the docReference properties that we want to be stored. In our case: displayName and email.\n\n  if (!snapshot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      })\n    } catch (error) {\n      console.log('error creating the user', error.message);\n    }\n  }\n  return userRef;\n}\n\nfirebase.initializeApp(config);\n\n// Various Configurations => we need to have access to the methods from the auth and the firestore libraries.\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\n// Access to Google Provider, as well as config a message to display whenever we use the Google Sign-In => it is a popup, to select a Google Account (Gmail).\n\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n})\n\n// Export method signInWithGoogle\n\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\n\n\n// Export the entire firebase, in case we want to use it into other components of our application\n\nexport default firebase;\n\n// The next step is to import the { signInWithGoogle} method to our sign-in component => insert the Google Method inside the button tag, as a function inside onClick. onClick ={signInWithGoogle}\n\n// ****** END OF FIREBASE CONFIGURATIONS ****** //\n\n\n\n\n// ****** SUPPORTING FUNCTIONS ****** //\n\n// This will be a function to load our shop data into the firebase, and it will be used just once, for the initial transport of data. On the other hand, now we have a function to use whenever we want to create a new collection, for example:\n\nexport const addCollectionAndDocuments = async (collectionKey, objectstoAdd) => {\n  // Define a new collection with the name 'collectionKey':\n  const collectionRef = firestore.collection(collectionKey);\n  console.log(collectionRef);\n  // Use the batch method, to set several documents at once, because the .set() method alone only allow us to save one document per time:\n  const batch = firestore.batch();\n  // Loop through the array of objects, and prepare the object to be added to the collection in each iteration:\n  objectstoAdd.forEach(object => {\n    const newDocumentRef = collectionRef.doc();\n    batch.set(newDocumentRef, object); \n  });\n  // Commit will gather all the generated documents and will fire them together to the database:\n  return await batch.commit();\n}\n\n// This will be a function to convert the Snapshot Object, which is the 'collections' collection, to an actual object with objects inside (each collection), so we can be able to see the shop data in the application, with the same format from the SHOP_DATA.js:\n\nexport const convertCollectionsFromSnapshotToMap = (collections) => {\n  const transformCollections = collections.docs.map (doc => {\n    const { title, items } = doc.data();\n    return (\n      {\n        routeName: encodeURI(title.toLowerCase()),\n        id: doc.id,\n        title,\n        items,\n      }\n    )\n  })\n  console.log(transformCollections);\n  return (\n    transformCollections.reduce((accumulator, collection) => {\n      accumulator[collection.title.toLowerCase()] = collection;\n      return accumulator;\n     },{})\n  )\n}\n\n// This will be a function to return the user object, in case is different than null, which means the user is authenticated. With this function, we can add it to a listener, that will check if the user is still logged-in:\n\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  })\n}\n\n// ****** END OF SUPPORTING FUNCTIONS ****** //\n","// In this file, we will configure the actions that will trigger the shopReducer. \n\n// The function below returns a action object, which will be dispatched later on to all the application Reducers! \n\nimport { shopActionTypes } from './shop.action.types';\nimport { firestore, convertCollectionsFromSnapshotToMap } from '../../firebase/firebase.utilities';\n\nexport const fetchCollectionsStart = () => {\n  return ({\n    type: shopActionTypes.FETCH_COLLECTIONS_START,\n  })\n}\n\nexport const fetchCollectionsSuccess = (collectionsMap) => {\n  return ({\n    type: shopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n    payload: collectionsMap\n  })\n}\n\nexport const fetchCollectionsFailure = (errorMessage) => {\n  return ({\n    type: shopActionTypes.FETCH_COLLECTIONS_FAILURE,\n    payload: errorMessage\n  })\n}\n\nexport const fetchCollectionsStartAsync = () => {\n  return (\n    dispatch => {\n      const collectionRef = firestore.collection('collections');\n      dispatch(fetchCollectionsStart());\n      collectionRef.get()\n      .then(async collectionSnapshot => {\n      const collectionsMap = await convertCollectionsFromSnapshotToMap(collectionSnapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n      })\n      .catch(error => dispatch(fetchCollectionsFailure(error.message)));\n    }\n  )\n}\n\n\n// ***** Not needed anymore, due to redux-thunk ***** //\n\n// export const updateCollections = collectionsMap => {\n//   return ({\n//     type: shopActionTypes.UPDATE_COLLECTIONS,\n//     payload: collectionsMap\n//   })\n// }\n\n","import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { firestore, convertCollectionsFromSnapshotToMap } from '../../firebase/firebase.utilities';\nimport { shopActionTypes } from './shop.action.types';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\n\nexport function* fetchCollectionsAsync () {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call (convertCollectionsFromSnapshotToMap, snapshot);\n    yield put (fetchCollectionsSuccess(collectionsMap));\n  }\n  catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\n\nexport function* fetchCollectionsStart () {\n  yield takeLatest(\n    shopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  )\n}\n\nexport function* shopSagas() {\n  yield all([\n    call(fetchCollectionsStart)\n  ])\n}","// In this file, we will configure the actions that will trigger the rootReducer. \n\n// The function below returns a action object, which will be dispatched later on to all the application Reducers! See more in the App.js\n\nimport userActionTypes from './user.action.types';\n\nexport const setCurrentUser = user => {\n  return ({\n    type: userActionTypes.SET_CURRENT_USER,\n    payload: user\n  })\n};\n\nexport const googleSignInStart = () =>  ({\n      type: userActionTypes.GOOGLE_SIGN_IN_START\n});\n\nexport const emailSignInStart = emailAndPassword => ({\n      type: userActionTypes.EMAIL_SIGN_IN_START,\n      payload: emailAndPassword\n});\n\nexport const signInSuccess = user => ({\n      type: userActionTypes.SIGN_IN_SUCCESS,\n      payload: user\n});\n\nexport const signInFailure = error => ({\n      type: userActionTypes.SIGN_IN_FAILURE,\n      payload: error\n});\n\nexport const checkUserSession = () => ({\n      type: userActionTypes.CHECK_USER_SESSION\n})\n\nexport const signOutStart = () => ({\n      type: userActionTypes.SIGN_OUT_START,\n});\n\nexport const signOutSuccess = () => ({\n      type: userActionTypes.SIGN_OUT_SUCCESS,\n});\n\nexport const signOutFailure = error => ({\n      type: userActionTypes.SIGN_OUT_FAILURE,\n      payload: error\n});\n\nexport const signUpStart = emailAndPassword => ({\n      type: userActionTypes.SIGN_UP_START,\n      payload: emailAndPassword\n})\n\nexport const signUpSuccess = ({ user, additionalData }) => ({\n      type: userActionTypes.SIGN_UP_SUCCESS,\n      payload: { user, additionalData }\n});\n\nexport const signUpFailure = error => ({\n      type: userActionTypes.SIGN_UP_FAILURE,\n      payload: error\n});\n","import { takeLatest, all, call, put } from 'redux-saga/effects';\nimport userActionTypes from './user.action.types';\n// import { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from './user.actions';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utilities';\n\n\nexport function* getSnapshotFromUserAuth(user, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, user, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({id: userSnapshot.id, ...userSnapshot.data()}));\n  }\n  catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signUpStart() {\n  yield takeLatest(userActionTypes.SIGN_UP_START, signUpWithEmail);\n}\n\n\nexport function* signUpWithEmail({payload: {email, password, displayName}}) {\n  try {\n    const {user} = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({user, additionalData: { displayName }}));\n  }\n  catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\n\nexport function* signUpWithSuccess() {\n  yield takeLatest(\n    userActionTypes.SIGN_UP_SUCCESS,\n    signInAfterSignUp\n  )\n}\n\nexport function* signInAfterSignUp({ payload: { user, additionalData} }) {\n  yield getSnapshotFromUserAuth(user, additionalData)\n}\n\nexport function* googleSignInStart() {\n  yield takeLatest(\n    userActionTypes.GOOGLE_SIGN_IN_START,\n    signInWithGoogle\n  )\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const {user} = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  }\n  catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* emailSignInStart() {\n  yield takeLatest(\n    userActionTypes.EMAIL_SIGN_IN_START,\n    signInWithEmail\n  )\n}\n\nexport function* signInWithEmail({payload: {email, password}}) {\n  try {\n    const {user} = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n    \n  }\n  catch (error) {\n    yield put(signInFailure(error));\n   }\n}\n\n  export function* checkUserSession() {\n    yield takeLatest(\n      userActionTypes.CHECK_USER_SESSION,\n      isUserAuthenticated\n    )\n  }\n  \n  export function* isUserAuthenticated() {\n    try{\n      const userAuth = yield getCurrentUser();\n      if(!userAuth) {\n        return;\n      } else {\n        yield getSnapshotFromUserAuth(userAuth);\n      }\n    }\n    catch (error) {\n      yield put(signInFailure(error));\n    }\n  }\n\n  export function* onSignOutStart() {\n    yield takeLatest(\n      userActionTypes.SIGN_OUT_START,\n      signOutFromApp\n    )\n  }\n\n  export function* signOutFromApp() {\n    try {\n      yield auth.signOut();\n      yield put(signOutSuccess());\n    }\n    catch (error) {\n      yield put(signOutFailure(error));\n    }\n  }\n\n  export function* userSagas() {\n  yield all([\n    call(googleSignInStart), \n    call(emailSignInStart),\n    call(checkUserSession),\n    call(onSignOutStart),\n    call(signUpStart),\n    call(signUpWithSuccess)\n    ]);\n  }\n","// In this file, we will configure the actions that will trigger the rootReducer. \n\n// The function below returns a action object, which will be dispatched later on to all the application Reducers! \n\nimport { cartActionTypes } from './cart.action.types';\n\nexport const setCartDropdownDisplay = () => {\n  return ({\n    type: cartActionTypes.TOOGLE_CART_DISPLAY,\n  })\n};\n\nexport const addItem = (item) => {\n  return ({\n    type: cartActionTypes.ADD_ITEM_TO_CART,\n    payload: item\n  })\n};\n\nexport const removeItem = (item) => {\n  return ({\n    type: cartActionTypes.REMOVE_ITEM_FROM_CART,\n    payload: item\n  })\n};\n\nexport const removeQuantityFromItem = (item) => {\n  return ({\n    type: cartActionTypes.REMOVE_QUANTITY_FROM_ITEM,\n    payload: item\n  })\n}\n\nexport const clearCart = () => {\n  return ({\n    type: cartActionTypes.CLEAR_CART\n  })\n}\n\n","import { takeLatest, all, call, put } from 'redux-saga/effects';\nimport userActionTypes from '../user/user.action.types';\nimport { clearCart } from './cart.actions';\n\nexport function* clearCartAfterSignOut() {\n  yield put(clearCart());\n}\n\nexport function* clearCartStart() {\n  yield takeLatest(userActionTypes.SIGN_OUT_SUCCESS, clearCartAfterSignOut);\n}\n\nexport function* cartSagas() {\n  yield all([\n    call(clearCartStart)\n  ])\n}\n\n\n","import { all, call } from 'redux-saga/effects';\nimport { shopSagas } from './shop/shop.sagas';\nimport { userSagas } from './user/user-sagas';\nimport { cartSagas } from './cart/cart.sagas';\n\n// Root Saga allow to include an array of sagas, so that they all can be covered by the sagaMiddleware.run():\n\nexport default function* rootSaga() {\n  yield all ([\n    call(shopSagas),\n    call(userSagas),\n    call(cartSagas)\n  ]);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport { logger } from 'redux-logger';\nimport rootReducer from './root-reducer';\n// import thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\n// import { fetchCollectionsStart } from '../redux/shop/shop.sagas';\nimport rootSaga from './root-saga';\n\n// The store needs the middlewares, which are actually functions that receive inputs and produce new inputs, so we can capture each action and direct it to the root reducer. We will put the middlewares as an array, in order to make it easier for us to add new middlewares to the logger. \n\n// But first, this array will start as empty, because we will only use the looger in our google chrome dev tools console for the application's development version. The array can be pre-loaded whenever we want to use specific middlewares to handle parallel assynchronous actions, such as redux-thunk and redux-saga:\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware];\n\nif(process.env.NODE_ENV === 'development') {\n  middlewares.push(logger)\n};\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nsagaMiddleware.run(/* fetchCollectionsStart */ rootSaga);\n\n// The persistor is using the redux-persist library, so we can make the configurations necessary to create a 'cache' of the Store, which will allow the application to persist the store, and therefore, to persist the currentState, even if there is a refresh, or if the user closes the tab/browser.\n\nexport const persistor = persistStore(store);\n\nexport default { store, persistor };","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    font-family: \"Open Sans Condensed\";\n    padding: 20px 50px;\n\n    @media screen and (max-width: 800px) {\n      padding: 10px;\n    }\n  }\n\n  a {\n    text-decoration: none;\n    color: black;\n    font-weight: 600;\n  }\n\n  * {\n    box-sizing: border-box;\n  }\n`","import { createSelector } from 'reselect';\n\n// state.directory is pointing to the property 'directory' inside the RootReducer:\nconst selectDirectory = state => state.directory;\n\nexport const selectDirectorySections = createSelector(\n  [selectDirectory],\n  // Below is the path from the RootReducer to the DirectoryReducer, where there is a 'sections' property inside the initial state:\n  directory => directory.sections\n);\n\n\n\n","import React from \"react\";\nimport { withRouter } from 'react-router-dom';\nimport \"./menu-item.styles.scss\";\n\nconst MenuItem = ({ title, imageUrl, size, linkUrl, history, match }) => {\n  return (\n    <article className={`menu-item ${size}`} onClick={() => history.push(`${match.url}${linkUrl}`)}>\n      <div style={{\n        backgroundImage: `url(${imageUrl})`\n      }}\n        className='background-image'\n      />\n      <div className=\"content\">\n        <h1 className=\"title\">{ title.toUpperCase() }</h1>\n        <span className=\"subtitle\">SHOP NOW</span>\n      </div>\n    </article>\n  );\n};\n\nexport default withRouter(MenuItem);\n\n","import React from \"react\";\nimport { connect } from 'react-redux';\nimport { createStructuredSelector} from 'reselect';\nimport { selectDirectorySections } from '../../redux/directory/directory.selectors';\nimport \"./directory.styles.scss\";\n\n// Component Dependencies\n\nimport MenuItem from \"../menu-item/menu-item.component\";\n\nconst Directory = ({ sections }) => {\n    return (\n      <section className=\"directory-menu\">\n        {\n          sections.map(({ id, ...otherSectionProps }) => {\n            return (\n              <MenuItem key={id} {...otherSectionProps} />\n            )\n          })\n\n        }\n      </section>\n    );\n  }\n\nconst mapStateToProps = createStructuredSelector({\n  // This can be a property with any name =>  it is not related to the properties inside the RootReducer and the DirectoryReducer:\n  sections: selectDirectorySections\n});\n\nexport default connect(mapStateToProps)(Directory);\n","import styled from 'styled-components';\n\nconst HomePageContainer = styled.section`\ndisplay: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px 80px;\n` \n\nexport default HomePageContainer;","import React from \"react\";\n// import \"./homepage.styles.scss\"; => replaced by styled-components!\n\n// Components Dependencies\n\nimport Directory from '../../components/directory/directory.component';\nimport HomePageContainer from './homepage.styles';\n\nconst HomePage = () => {\n  return (\n    <HomePageContainer>\n      <Directory />\n    </HomePageContainer>\n  );\n};\n\nexport default HomePage;\n","import {\n  createSelector\n} from 'reselect';\n\n// state.shop is pointing to the property 'shop' inside the RootReducer:\nconst selectShop = state => state.shop;\n\n// Below is the path from the RootReducer to the ShopReducer, where there is a 'collections' property inside the initial state:\nexport const selectShopCollections = createSelector(\n  [selectShop],\n  shop => shop.collections\n);\n\n\n// The COLLECTION_ID_MAP is an object, created with the purpose of finding a number, according to the Url parameter. We need to do this, because we want to find and display the correct collection, by using its id, which is a number inside our ShopReducer collections state:\n\n// Note: with the data normalization, this object is no longer necessary, because now only need the Url parameter to find the correct property inside the shop data object, instantaneously or nearly instantaneously:\n\n// const COLLECTION_ID_MAP={\n//   hats: 1,\n//   sneakers: 2,\n//   jackets: 3,\n//   women: 4,\n//   men: 5  \n// }\n\n// We will create this function to pull off the collections state, so we can select the collection with the collectionParam provided (a string converted to a number using the COLLECTION_ID_MAP). This will return an object, which is the entire collection with its properties, such as the 'items' property, that contains all products related to the collection:\n\n// The .find() method was used till the moment we stored the shop data inside and array. After that, by making the data normalization, now these shop data are stored inside objects. The performance is improved, because there is need to iterate through an entire array, but only to find directly the correct property name, instantaneously or nearly instantaneously, that matches the url parameter:\n\n//  collections => collections.find(collection => collection.id === COLLECTION_ID_MAP[collectionParam])\n\nexport const selectOneCollection = collectionParam =>\n  createSelector(\n    [selectShopCollections],\n    collections => collections ? collections[collectionParam] : null\n  );\n\n  //  collections => collections.find(collection => collection.id === COLLECTION_ID_MAP[collectionParam])\n  //  collections => collections[collectionParam]\n  \n  // The .find() method was used till the moment we stored the shop data inside an array. After that, by making the data normalization, now the shop data are stored inside objects. The performance is improved, because there is need to iterate through an entire array, but only to find directly the correct property name, instantaneously or nearly instantaneously, that matches the url parameter. \n  //  But now we have changed the array to an object and this is no longer recognized by the component (CollectionOverview) which still thinks Collections is an array. To convert an object to an array, we will use Object.Keys. With this, we will have again an array of objects:\n\nexport const selectOneCollectionToDisplay = createSelector(\n  [selectShopCollections],\n  collections => collections ? Object.keys(collections).map(key => collections[key]) : []\n)\n\nexport const selectIsFetchingCollections = createSelector(\n  [selectShop],\n  shop => shop.isFetching\n)\n\nexport const selectIsCollectionLoaded = createSelector(\n  [selectShop],\n  shop => !!shop.collections\n)\n\n\n\n","import React from 'react';\nimport './custom-button.styles.scss';\n\nconst CustomButton = ({ children, isGoogleSignIn, hoverAddToCart, ...otherProps}) => {\n  return (\n    <button className={`${isGoogleSignIn ? 'google-sign-in' : ''} ${hoverAddToCart ? 'inverted' : ''} custom-button`} {...otherProps}>{ children }</button>\n  )\n}\n\nexport default CustomButton;","import React from \"react\";\nimport { connect } from 'react-redux';\nimport { addItem } from '../../redux/cart/cart.actions';\nimport \"./collection-item.styles.scss\";\n\n// Components Dependencies\n\nimport CustomButton from '../custom-button/custom-button.component';\n\n\nconst CollectionItem = ({ item, addItem }) => {\n  const { name, imageUrl, price } = item;\n  return (\n    <article className=\"collection-item\">\n        <div\n          className=\"image\"\n          style={{ backgroundImage: `url(${imageUrl})` }}\n        />\n        <div className=\"collection-footer\">\n          <span className='name'>{name}</span>\n          <span className='price'>${price}</span>\n        </div>\n        <CustomButton hoverAddToCart onClick={() => addItem(item)}>Add to Cart</CustomButton>\n    </article>\n  );\n};\n\n// Whenever that is an event (a click button), we will call the addItem() function. This function will receive the clicked item as an argument and then dispatch the addItem() action creator. This action that returns is an object, with the type ADD_ITEM_TO_CART and the payload as 'item', which is the actual item chosen by the user to be added to the cart. \n\n// This object will then be passed to the Store, which will then trigger the redux flow, changing the state, updating the store and making DOM updates.\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: (item) => dispatch(addItem(item))\n});\n\nexport default connect(null, mapDispatchToProps)(CollectionItem);\n","import React from 'react';\nimport './collection-preview.styles.scss';\n\n// Components Dependencies\n\nimport CollectionItem from '../collection-item/collection-item.component';\n\nconst CollectionPreview = ({ title, items }) => {\n  return (\n    <section className='collection-preview'>\n      <h1 className='title'>{ title.toUpperCase() }</h1>\n      <div className='preview'>\n      {\n        items.filter((item, index) => index < 4).map((item) => <CollectionItem key={item.id} item={item} /> )\n      }\n      </div>\n    </section>\n  )\n}\n\nexport default CollectionPreview;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector} from 'reselect';\nimport { selectOneCollectionToDisplay } from '../../redux/shop/shop.selectors';\nimport './collections-overview.styles.scss';\n\n// Components Dependencies\n\nimport CollectionPreview from '../collection-preview/collection-preview.component';\n\nconst CollectionsOverview = ({collections}) => {\n  return (\n    <section className='collections-overview'>\n        {\n          collections.map(({id, ...otherSectionProps}) => {\n            return (\n              <CollectionPreview key={id} {...otherSectionProps} />\n            )\n          })\n        }\n      \n    </section>\n  )\n}\n\nconst mapStateToProps = createStructuredSelector({\n  // collections: selectShopCollections => with data normalization, wew created a new selector, to convert our object into an array (see shop.selectors.js):\n  collections: selectOneCollectionToDisplay\n})\n\nexport default connect(mapStateToProps)(CollectionsOverview);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { selectOneCollection } from '../../redux/shop/shop.selectors';\nimport './collection-page.styles.scss';\n\n// Components Dependencies\n\nimport CollectionItem from '../../components/collection-item/collection-item.component';\n\nconst CollectionPage = ({ match, collection }) => {\n  console.log(match);\n  console.log(match.params.collectionId);\n  console.log(collection);\n  const { title, items } = collection;\n  return(\n    <section className='collection-page'>\n      <h2 className='title'>{ title }</h2>\n      <div className='items'>\n        {\n          items.map((item) => <CollectionItem key={item.id} item={item} />)\n        }\n      </div>\n    </section>\n  )\n}\n\n// The function below has some different features from others: (i) it needs the props received from Route, which is nesting the CollectionPage component (see ShopPage Component); (ii) therefore, it is possible to access the 'match' object => props.match; (iii) the selectOneCollection needs to receive: the collectionId parameter (which is a string at this point => the URL parameter) and the state because, unlike other selectors, this selector will need a part of the ShopPageReducer state based on the URL parameter.\n\nconst mapStateToProps = (state, props) => {\n  return (\n    {\n      collection: selectOneCollection (props.match.params.collectionId)(state)\n    }\n  )\n}\n\nexport default connect(mapStateToProps)(CollectionPage);\n\n","import styled from 'styled-components';\n\nexport const SpinnerOverlay = styled.div`\n  height: 60vh;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const SpinnerContainer = styled.div`\n  display: inline-block;\n  width: 50px;\n  height: 50px;\n  border: 3px solid rgba(195, 195, 195, 0.6);\n  border-radius: 50%;\n  border-top-color: #636767;\n  animation: spin 1s ease-in-out infinite;\n  -webkit-animation: spin 1s ease-in-out infinite;\n  @keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n`;","import React from 'react';\nimport { SpinnerOverlay, SpinnerContainer} from './with-spinner.styles';\n\n// We are creating here a HOC - High Order Component. The objective is to return a new component with the isLoading property, which will allow the application to display a spinner till the async call to the back-end is finished!\n\nconst WithSpinner = WrappedComponent => ({isLoading, ...otherProps}) => {\n  return isLoading ? (\n      <SpinnerOverlay>\n        <SpinnerContainer />\n      </SpinnerOverlay>\n    ) : (\n      <WrappedComponent { ...otherProps } />\n    )\n}\n\n// This component will be exported to the shop page component, because there is where the collections are updated!\n\nexport default WithSpinner;","import React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n// import { firestore, convertCollectionsFromSnapshotToMap } from '../../firebase/firebase.utilities';\nimport {createStructuredSelector} from 'reselect';\nimport { /* selectIsFetchingCollections, */ selectIsCollectionLoaded } from '../../redux/shop/shop.selectors';\nimport { /*fetchCollectionsStartAsync, */ fetchCollectionsStart } from '../../redux/shop/shop.actions';\nimport './shop-page.styles.scss';\n\n// Components Dependencies\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection-page/collection-page.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\n// Convert the components below to new components, so that they can receive WithSpinner and display the spinner while the application is fetching the collections data, till the reducer is updated with a new state (the shop data from the back-end):\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nconst ShopPage = ({ fetchCollectionsStart, match, isCollectionLoaded }) => {\n\n  useEffect(() => {\n    fetchCollectionsStart()\n  }, [fetchCollectionsStart]) \n\n  return (\n    <section className=\"shop-page\">\n    <Route exact path={`${match.path}`} render={(otherProps) => ( <CollectionsOverviewWithSpinner isLoading={ !isCollectionLoaded}  {...otherProps} /> ) } />\n    <Route path={`${match.path}/:collectionId`} render={(otherProps) => ( <CollectionPageWithSpinner isLoading={ !isCollectionLoaded } {...otherProps} /> ) } />\n    </section>\n  )\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionLoaded: selectIsCollectionLoaded\n})\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ShopPage);\n\n// ******** ALTERNATIVES TO WRITE ASSYNCHRONOUS FUNCTIONS - WHENEVER THERE IS NOT AN OBSERVABLE - OBSERVER PATTERN ************ //\n\n    // componentDidMount() {\n    //   const { updateCollections } = this.props;\n    //   const collectionRef = firestore.collection('collections');\n    //   collectionRef.get().then(collectionSnapshot => {\n    //     const collectionsMap = await convertCollectionsFromSnapshotToMap(collectionSnapshot);\n    //     updateCollections(collectionsMap);\n    //     this.setState({\n    //       loading: false,\n    //     })\n    //   })\n    // }\n\n   \n\n\n\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"title\", null, \"Group\");\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"desc\", null, \"Created with Sketch.\");\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  id: \"WiP\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, React.createElement(\"g\", {\n  id: \"Artboard\",\n  transform: \"translate(-90.000000, -38.000000)\"\n}, React.createElement(\"g\", {\n  id: \"Group\",\n  transform: \"translate(90.000000, 38.000000)\"\n}, React.createElement(\"polygon\", {\n  id: \"Rectangle\",\n  fill: \"#808282\",\n  points: \"3 14 25 26.5 47 14 40.855176 39 9.08421785 39\"\n}), React.createElement(\"polygon\", {\n  id: \"Triangle\",\n  fillOpacity: 0.262838724,\n  fill: \"#101A1A\",\n  points: \"25 8 40 39 10 39\"\n}), React.createElement(\"circle\", {\n  id: \"Oval\",\n  fill: \"#5E6363\",\n  cx: 2,\n  cy: 9,\n  r: 2\n}), React.createElement(\"circle\", {\n  id: \"Oval\",\n  fill: \"#5E6363\",\n  cx: 25,\n  cy: 2,\n  r: 2\n}), React.createElement(\"circle\", {\n  id: \"Oval\",\n  fill: \"#5E6363\",\n  cx: 48,\n  cy: 9,\n  r: 2\n}))));\n\nvar SvgCrown = function SvgCrown(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: \"50px\",\n    height: \"39px\",\n    viewBox: \"0 0 50 39\",\n    ref: svgRef\n  }, props), title === undefined ? _ref2 : title ? React.createElement(\"title\", null, title) : null, _ref3, _ref4);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgCrown, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/crown.ed28accb.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref6 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref7 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref8 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref9 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref10 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref11 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref12 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref13 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref14 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref15 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref16 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar SvgShoppingBag = function SvgShoppingBag(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 407.453 407.453\",\n    style: {\n      enableBackground: \"new 0 0 407.453 407.453\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, React.createElement(\"g\", null, React.createElement(\"path\", {\n    style: {\n      fill: \"#010002\"\n    },\n    d: \"M255.099,116.515c4.487,0,8.129-3.633,8.129-8.129c0-4.495-3.642-8.129-8.129-8.129H143.486 c-4.487,0-8.129,3.633-8.129,8.129c0,4.495,3.642,8.129,8.129,8.129H255.099z\"\n  }), React.createElement(\"path\", {\n    style: {\n      fill: \"#010002\"\n    },\n    d: \"M367.062,100.258H311.69c-4.487,0-8.129,3.633-8.129,8.129c0,4.495,3.642,8.129,8.129,8.129h47.243 v274.681H48.519V116.515h44.536c4.487,0,8.129-3.633,8.129-8.129c0-4.495-3.642-8.129-8.129-8.129H40.391 c-4.487,0-8.129,3.633-8.129,8.129v290.938c0,4.495,3.642,8.129,8.129,8.129h326.671c4.487,0,8.129-3.633,8.129-8.129V108.386 C375.191,103.891,371.557,100.258,367.062,100.258z\"\n  }), React.createElement(\"path\", {\n    style: {\n      fill: \"#010002\"\n    },\n    d: \"M282.59,134.796c4.487,0,8.129-3.633,8.129-8.129V67.394C290.718,30.238,250.604,0,201.101,0 c-49.308,0-89.414,30.238-89.414,67.394v59.274c0,4.495,3.642,8.129,8.129,8.129s8.129-3.633,8.129-8.129V67.394 c0-28.198,32.823-51.137,73.36-51.137c40.334,0,73.157,22.939,73.157,51.137v59.274 C274.461,131.163,278.095,134.796,282.59,134.796z\"\n  }), React.createElement(\"path\", {\n    style: {\n      fill: \"#010002\"\n    },\n    d: \"M98.892,147.566c0,11.526,9.389,20.907,20.923,20.907c11.534,0,20.923-9.38,20.923-20.907 c0-4.495-3.642-8.129-8.129-8.129s-8.129,3.633-8.129,8.129c0,2.561-2.089,4.65-4.666,4.65c-2.569,0-4.666-2.089-4.666-4.65 c0-4.495-3.642-8.129-8.129-8.129S98.892,143.071,98.892,147.566z\"\n  }), React.createElement(\"path\", {\n    style: {\n      fill: \"#010002\"\n    },\n    d: \"M282.59,168.473c11.534,0,20.923-9.38,20.923-20.907c0-4.495-3.642-8.129-8.129-8.129 c-4.487,0-8.129,3.633-8.129,8.129c0,2.561-2.089,4.65-4.666,4.65c-2.577,0-4.666-2.089-4.666-4.65 c0-4.495-3.642-8.129-8.129-8.129c-4.487,0-8.129,3.633-8.129,8.129C261.667,159.092,271.055,168.473,282.59,168.473z\"\n  })), _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgShoppingBag, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/shopping-bag.09e6f5e7.svg\";\nexport { ForwardRef as ReactComponent };","import { createSelector } from 'reselect';\n\nexport const selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector(\n  [selectCart],\n  cart => cart.cartItems\n);\n\nexport const selectCartItemsCount = createSelector(\n  [selectCartItems],\n  cartItems => cartItems.reduce((quantitySum, cartItem) => {\n    return (\n      quantitySum += cartItem.quantity\n    )\n  }, 0)\n);\n\nexport const selectCartHiddenDropdown = createSelector(\n  [selectCart],\n  cart => cart.hiddenDropdown\n);\n\nexport const selectCartItemsTotalValue = createSelector(\n  [selectCartItems],\n  cartItems => cartItems.reduce((quantitySum, cartItem) => {\n    return (\n      quantitySum += (cartItem.quantity * cartItem.price)\n    )\n  }, 0)\n);\n\n// if we call the selectCartItemsCount, there will be this flow:\n\n// (i) go to selectCartItems function\n// (ii) go to selectCart function\n// (iii) get the selectCart function return =>  state.cart\n// (iv) pass this return into the selectCartItems \n// (v) pass the selectCartItems return into the selectCartItemsCount function\n// (vi) The itemCount result is then passed as props to the cart-icon component\n// (vii) Now the cart-icon component is memoized, and is not re-rendered if the state changes are not related to the component.\n\n// if we call the selectCartItems, there will be this flow:\n\n// (i) go to selectCart function\n// (ii) get the selectCart function return =>  state.cart\n// (iii) pass this return into the selectCartItems \n// (vi) The cartItems result is then passed as props to the cart-dropdown component\n// (vii) Now the cart-dropdown component is memoized, and is not re-rendered if the state changes are not related to the component.\n\n","import React from 'react';\nimport { ReactComponent as ShoppingBagIcon} from '../../assets/shopping-bag.svg';\nimport { connect } from 'react-redux';\nimport {createStructuredSelector} from 'reselect';\nimport { setCartDropdownDisplay } from '../../redux/cart/cart.actions';\nimport { selectCartItemsCount } from '../../redux/cart/cart.selectors';\nimport './cart-icon.styles.scss';\n\nconst CartIcon = ({setCartDropdownDisplay, iconCount }) => {\n  return (\n    <section className='cart-icon' onClick={setCartDropdownDisplay}>\n      <ShoppingBagIcon className='shopping-icon' />\n      <span className='item-count'>{iconCount}</span>\n    </section>\n  )\n}\n\n// The function below is called a 'Selector', which means that we are pulling an state and then extracting a piece of it.\n\n// Whenever the cartItems state changes, it will be a new object. In this case, the reduce method will be called again, even if the state changes have nothing to do with what our component needs. So, we will re-render the cartIcon component and get the same output. This creates a performance issue, because we are rendering the component again and again without a real change inside of it.\n\n// To avoid this, we can use a Reselect Library, that will store the iconCounter output and that will only pass props to our component, whenever it realizes that the new data will actually change the stored output. This concept is called Memoization.\n\n// Memoization is a specific type of cache that returns a storaged value from a function, whenever this function is called with the same arguments. Basically, it will always return the cached value => remember the concept of pure functions.\n\n// To install the Reselect Library => npm add reselect.\n\n// Now the cart-icon component is memoized, and is not re-rendered if the state changes are not related to the component.\n\nconst mapStateToProps = createStructuredSelector ({\n  iconCount: selectCartItemsCount\n})\n  // return (\n  //   {\n      // iconCount: state.cart.cartItems.reduce((quantitySum, cartItem) => {\n      //   return (\n      //     quantitySum += cartItem.quantity\n      //   )\n      // }, 0)\n      // iconCount: selectCartItemsCount(state)\n      // Now the cart-icon component is memoized, and is not re-rendered if the state changes are not related to the component.\n  //   }\n  // )\n// }\n\nconst mapDispatchToProps = dispatch => ({\n  setCartDropdownDisplay: () => dispatch(setCartDropdownDisplay())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartIcon);","import React from \"react\";\nimport './cart-item.styles.scss';\n\nconst CartItem = ({item: {imageUrl, name, price, quantity}}) => {\n  return (\n    <section className='cart-item'>\n      <img src={imageUrl} alt='item added to the shop cart' />\n      <div className='item-details'>\n        <span className='name'>{name}</span>\n        <span className='price'>{quantity} x ${price}</span>\n      </div>\n    </section>\n  )\n}\n\nexport default CartItem;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport {createStructuredSelector} from 'reselect';\nimport './cart-dropdown.styles.scss';\n\n// Component Dependencies\n\nimport CustomButton from '../custom-button/custom-button.component';\nimport CartItem from '../cart-item/cart-item.component';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { setCartDropdownDisplay } from '../../redux/cart/cart.actions';\n\nconst CartDropdown = ({cartItems, history, dispatch}) => {\n  return (\n    <section className='cart-dropdown'>\n      <div className='cart-items'>\n        {\n          cartItems.length \n          ?\n          cartItems.map(cartItem => <CartItem key={cartItem.id} item={cartItem} />)\n          :\n          <span className='empty-message'>Your cart is empty</span>\n        }\n      </div>\n      <CustomButton onClick={() => {\n        history.push('/checkout');\n        dispatch(setCartDropdownDisplay());\n        }\n       }\n      >\n      Go to Checkout</CustomButton>\n    </section>\n  )\n}\n\nconst mapStateToProps = createStructuredSelector ({\n    cartItems: selectCartItems\n})\n\nexport default withRouter(connect(mapStateToProps)(CartDropdown));\n","import { createSelector } from 'reselect';\n\nconst selectUser = state => state.user;\n\nexport const selectCurrentUser = createSelector(\n  [selectUser],\n  user => user.currentUser\n)\n","import styled, { css } from 'styled-components';\nimport { Link } from \"react-router-dom\";\n\n\n// We can use the CSS library property whenever we want to share the same styles to different elements in a same component:\nconst HeaderCommonStyles = css`\n  padding: 10px 15px;\n  cursor: pointer;\n  font-weight: 600;\n`\n\n// This replaces the 'header' classname:\nexport const HeaderContainer = styled.header`\n  height: 70px;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 25px;\n\n  @media screen and (max-width: 800px) {\n      height: 60px;\n      padding: 10px;\n      margin-bottom: 20px;\n    }\n` \n// This replaces the 'logo-container' classname. Note that 'Link' is an argument, and 'styled' can work as a function, that receives a component as an argument:\nexport const LogoContainer = styled(Link)`\n  height: 100%;\n  width: 70px;\n  padding: 25px;\n\n  @media screen and (max-width: 800px) {\n     height: 40px;\n     padding: 0;\n    }\n`\n// This replaces the 'options' classname:\nexport const OptionsContainer = styled.nav`\n  width: 50%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n\n  @media screen and (max-width: 800px) {\n      width: 80%;\n    }\n`\n// This replaces the 'option' classname, as well as uses a shared component, called HeaderCommonStyles:\nexport const SingleOptionContainer = styled.div`\n  ${ HeaderCommonStyles }\n`\n// This replaces the 'option' classname, for the Link Component, as well as uses a shared component, called HeaderCommonStyles:\nexport const LinkOptionContainer = styled(Link)`\n  ${ HeaderCommonStyles }\n`\n","import React from \"react\";\n// import { Link } from \"react-router-dom\"; => replaced by styled-components!\nimport { connect } from 'react-redux';\nimport {createStructuredSelector} from 'reselect';\nimport { ReactComponent as Logo } from \"../../assets/crown.svg\";\n// import \"./header.styles.scss\"; => replaced by styled-components!\n// import { auth } from '../../firebase/firebase.utilities'; => replaced by redux-saga!\n\n// Component Dependencies\n  \nimport CartIcon from '../cart-icon/cart-icon.component.jsx';\nimport CartDropdown from '../cart-dropdown/cart-dropdown.component';\nimport { selectCartHiddenDropdown } from '../../redux/cart/cart.selectors';\nimport { selectCurrentUser } from '../../redux/user/user.selectors';\nimport { signOutStart } from '../../redux/user/user.actions';\n// These are the Header styled-components, creating styles through JavaScript:\nimport { HeaderContainer, LogoContainer, OptionsContainer, SingleOptionContainer, LinkOptionContainer } from './header.styles'; \n\n\n // We are receiving the current user to define what to display inside the header. If the user is logged, we should display a sign-out option. Ohterwise, we will display a sign-in option.\n\nconst Header = ({ currentUser, hiddenDropdown, signOutStart }) => {\n  return (\n    <HeaderContainer>\n      <LogoContainer to=\"/\" alt=\"shop logo\">\n        <Logo className='logo' />\n      </LogoContainer>\n      <OptionsContainer>\n        <LinkOptionContainer to='/shop'>\n          LOJA\n        </LinkOptionContainer>\n        <LinkOptionContainer>\n          <a  href='mailto:fabgmad@gmail.com'>\n            CONTATO\n          </a>\n        </LinkOptionContainer>\n        { /*\n          currentUser ?\n            (<SingleOptionContainer onClick={signOutStart}>\n            SIGN OUT\n            </SingleOptionContainer>) :\n            (<LinkOptionContainer to='/sign-in'>\n            SIGN IN\n            </LinkOptionContainer>) */\n        }\n        <CartIcon />\n      </OptionsContainer>\n      {\n        hiddenDropdown ?\n        null \n        :\n        <CartDropdown />\n      }\n    </HeaderContainer>\n  );\n};\n\n// Note: mapStateTo Props is not a default name, but is the most used function name by developers.\n\nconst mapStateToProps = createStructuredSelector ({\n  currentUser: selectCurrentUser,\n  hiddenDropdown: selectCartHiddenDropdown\n});\n\nconst mapDispatchToProps = dispatch => ({\n  signOutStart: () => dispatch(signOutStart())\n})\n\n// Connect is a high order component (HOC). A HOC is a function that receives a component as a argument and returns a new component, with higher privileges. This code will also be used several times in our application.\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport './checkout-item.styles.scss';\n\n// Component Dependencies\n\nimport { addItem } from '../../redux/cart/cart.actions';\nimport { removeItem } from '../../redux/cart/cart.actions';\nimport { removeQuantityFromItem } from '../../redux/cart/cart.actions';\n\nconst CheckOutItem = ({cartItem, addItem, removeItem, removeQuantityFromItem}) => {\n  const {imageUrl, name, quantity, price} = cartItem;\n  return (\n    <article className='checkout-item'>\n      <picture className='image-container'>\n        <img src={imageUrl} alt='item in your checkout ready to buy'/>\n      </picture>\n      <div className='name'>{name}</div>\n      <div className='quantity'>\n        <div className='arrow' onClick={() => removeQuantityFromItem(cartItem)}>&#10094;</div>\n          <span className='value'>{quantity}</span>\n        <div className='arrow' onClick={() => addItem(cartItem)}>&#10095;</div>\n      </div>\n      <div className='price'>${price}</div>\n      <div className='remove-button' onClick={() => removeItem(cartItem)}>&#10005;</div>\n    </article>\n  )\n}\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: (item) => dispatch(addItem(item)),\n  removeItem: (item) => dispatch(removeItem(item)),\n  removeQuantityFromItem: (item) => dispatch(removeQuantityFromItem(item))\n});\n\nexport default connect(null, mapDispatchToProps)(CheckOutItem);\n\n// The hexadecimals used correspond to wingding icons. More about it: https://www.w3schools.com/charsets/ref_utf_dingbats.asp","import React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport axios from 'axios';\n\nconst StripeCheckoutButton = ({ price }) => {\n\nconst priceInCentsForStripe = price * 100;\nconst publishableKey = 'pk_test_bxIFqEFOlSBXLGQkxxJcTUHm00XhXqInQA';\nconst onToken = token => {\n  axios({\n    url: 'payment',\n    method: 'post',\n    data: {\n      amount: priceInCentsForStripe,\n      token: token\n    }\n  }).then(response => {\n    alert('Payment successfully completed');\n  }).catch(error => {\n    console.log('Payment error: ', error);\n    alert('There was a problem with the payment. Please make sure to use the correct credit card.');\n  })\n}\n\nreturn (\n      <StripeCheckout\n        label='Pay Now'\n        name='Virtual Clothing Ltd.'\n        billingAddress\n        shippingAddress\n        image='https://sendeyo.com/up/d/f3eb2117da'\n        description={`Your total is $${price}`}\n        amount={priceInCentsForStripe}\n        panelLabel='Pay Now'\n        token={onToken}\n        stripeKey={publishableKey}\n      />\n      );\n};\n\nexport default StripeCheckoutButton;\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector} from 'reselect';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { selectCartItemsTotalValue } from '../../redux/cart/cart.selectors';\nimport './checkout-page.styles.scss';\n\n// Component Dependencies\n\nimport CheckOutItem from '../../components/checkout-item/checkout-item';\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button.component';\n\nconst CheckOutPage = ({ cartItems, cartTotalValue }) => {\n  return (\n    <section className='checkout-page'>\n      <header className='checkout-header'>\n        <div className='header-block'>\n          <span>Product</span>\n        </div>\n        <div className='header-block'>\n          <span>Description</span>\n        </div>\n        <div className='header-block'>\n          <span>Quantity</span>\n        </div>\n        <div className='header-block'>\n          <span>Price</span>\n        </div>\n        <div className='header-block'>\n          <span>Remove</span>\n        </div>\n      </header>\n      <div>\n        {\n        cartItems.map(cartItem => <CheckOutItem key={cartItem.id} cartItem={cartItem} />)\n        }\n      </div>\n      <div className='total'>TOTAL: ${cartTotalValue}</div>\n      <div className='test-warning'>\n        *Please use the following test credit card for payments*\n        <br />\n        4242 4242 4242 4242 - Exp: 01/20 - CVV: 123\n      </div>\n      <StripeCheckoutButton price= {cartTotalValue} />\n    </section>\n  )\n}\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems,\n  cartTotalValue: selectCartItemsTotalValue\n});\n\nexport default connect(mapStateToProps)(CheckOutPage);\n","import React, { useEffect } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {createStructuredSelector} from 'reselect';\nimport { GlobalStyle } from './global.styles';\n\n// Component Dependencies\n\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop-page/shop-page.component';\nimport Header from './components/header/header.component';\n// import SignInSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport CheckOutPage from './pages/checkout-page/checkout-page.component';\nimport { selectCurrentUser } from './redux/user/user.selectors';\nimport { checkUserSession } from './redux/user/user.actions';\n// import { selectOneCollectionToDisplay } from './redux/shop/shop.selectors'; => IMPORTANT: this selector was used just one time, to load the shop data to the firebase!!\n\nconst App = ({ checkUserSession, currentUser }) => {\n\n  useEffect(() => {\n    checkUserSession()\n  }, [checkUserSession])\n\n  return (\n    <div>\n      <GlobalStyle />\n      <Header />\n      <Switch>\n        <Route exact path='/' component={HomePage} />\n        <Route path='/shop' component={ShopPage} />\n        {/* <Route path='/sign-in' render={() => currentUser ? <Redirect to='/' /> : <SignInSignUpPage /> } /> */}\n        <Route path='/checkout' component={CheckOutPage} />\n      </Switch>\n    </div>\n  );\n}\n\n// Translating the line code below: give me the state of the user object, which is inside the UserReducer, and then apply it to my currentUser state. \n\nconst mapStateToProps = createStructuredSelector ({\n  currentUser: selectCurrentUser,\n  // collectionsArray: selectOneCollectionToDisplay => IMPORTANT: this selector was used just one time, to load the shop data to the firebase!!\n});\n\nconst mapDispatchToProps = dispatch => ({\n  checkUserSession: () => dispatch(checkUserSession())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\n\n// Components Dependencies\n\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <PersistGate persistor={persistor}>\n       <App />\n      </PersistGate>\n    </BrowserRouter> \n  </Provider>, \n  document.getElementById('root')\n  );\n\n\n  // PersistGate is the last step to implement the Local Storage persistence in our application. With the PersistGate, we can: (i) receive the Store; (ii) persist the Store, in order to \"rehydrate\" it with the Root Reducer current state. So, whenever there is a refresh, or the closing of a tab or the closing of the browser itself, the reducer state will initialize as empty, and then there will be the rehydration of the reducer, bringing what is in the cache, and also updating the reducer state to what it was in the current state.\n"],"sourceRoot":""}